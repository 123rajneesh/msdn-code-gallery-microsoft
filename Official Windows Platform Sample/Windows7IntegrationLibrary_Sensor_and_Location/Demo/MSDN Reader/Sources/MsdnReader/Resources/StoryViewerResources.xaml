<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:SceReader="clr-namespace:Microsoft.SceReader;assembly=SceReader"
    xmlns:SceReaderControls="clr-namespace:Microsoft.SceReader.Controls;assembly=SceReader"
    xmlns:SceReaderData="clr-namespace:Microsoft.SceReader.Data;assembly=SceReader"
    xmlns:Annotations="clr-namespace:System.Windows.Annotations;assembly=PresentationFramework"
    xmlns:aero="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
    xmlns:MsdnReader="clr-namespace:MsdnReader">
    <Style x:Key="ArticleTitleStyle" TargetType="{x:Type Figure}">
        <Setter Property="Width" Value="Content" />
        <Setter Property="Background" Value="White"/>
        <Setter Property="VerticalAnchor" Value="ContentTop" />
        <Setter Property="HorizontalAnchor" Value="ContentLeft" />
        <Setter Property="FontFamily" Value="Calibri,Georgia" />
        <Setter Property="FontSize" Value="{Binding Source={StaticResource LightSensorProvider}, Path=LuxValue, Converter={StaticResource LightLevelToFontSizeConverter}, ConverterParameter=28pt}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="FontStretch" Value="Normal" />
        <Setter Property="Margin" Value="0,0,0,10" />
        <Setter Property="Foreground" Value="{DynamicResource Brush_ChromeSolidColor}" />
    </Style>

    <Style x:Key="ImageFigureStyle" TargetType="{x:Type Figure}">
        <Setter Property="Width" Value="Column" />
        <Setter Property="VerticalAnchor" Value="ContentTop" />
        <Setter Property="HorizontalAnchor" Value="ContentRight" />
    </Style>

    <!-- Style for paragraph containers for all stand alone figures must set LineHeight to 0.01 -->
    <Style x:Key="FigureContainerStyle" TargetType="{x:Type Paragraph}">
        <Setter Property="LineHeight" Value="0.01" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
    </Style>

    <Style x:Key="ArticleBylineStyle" TargetType="{x:Type Run}">
        <Setter Property="FontFamily" Value="Calibri" />
        <Setter Property="FontSize" Value="{Binding Source={StaticResource LightSensorProvider}, Path=LuxValue, Converter={StaticResource LightLevelToFontSizeConverter}, ConverterParameter=18pt}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="FontStretch" Value="Normal" />
        <Setter Property="Typography.Capitals" Value="SmallCaps" />
        <Setter Property="Foreground" Value="{DynamicResource Brush_ChromeSolidColor}" />
    </Style>

    <Style x:Key="ArticleDateStyle" TargetType="{x:Type Run}">
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="{Binding Source={StaticResource LightSensorProvider}, Path=LuxValue, Converter={StaticResource LightLevelToFontSizeConverter}, ConverterParameter=12pt}" />
        <Setter Property="Foreground" Value="Gray" />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="FontStretch" Value="Normal" />
        <Setter Property="FontWeight" Value="Normal" />
    </Style>

    <Style x:Key="ArticleBodyTextStyle" TargetType="{x:Type Paragraph}">
        <Setter Property="FontFamily" Value="Calibri" />
        <Setter Property="FontSize" Value="{Binding Source={StaticResource LightSensorProvider}, Path=LuxValue, Converter={StaticResource LightLevelToFontSizeConverter}, ConverterParameter=16pt}" />
        <Setter Property="LineHeight" Value="20" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="FontStretch" Value="Normal" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="TextIndent" Value="20" />
        <Setter Property="Foreground" Value="{DynamicResource Brush_ChromeSolidColor}" />
    </Style>

    <Style x:Key="ArticleCodeStyle" TargetType="{x:Type Paragraph}">
        <Setter Property="FontFamily" Value="Consolas, Courier" />
        <Setter Property="FontSize" Value="{Binding Source={StaticResource LightSensorProvider}, Path=LuxValue, Converter={StaticResource LightLevelToFontSizeConverter}, ConverterParameter=11pt}" />
        <Setter Property="LineHeight" Value="14" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="FontStretch" Value="Normal" />
        <Setter Property="Padding" Value="10,0,0,0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="Foreground" Value="{DynamicResource Brush_ChromeSolidColor}" />
        <Setter Property="Background" Value="#FFDDF8F5" />
    </Style>

    <Style x:Key="ArticleSectionTitleStyle" TargetType="{x:Type Paragraph}">
        <Setter Property="FontFamily" Value="Candara" />
        <Setter Property="FontSize" Value="{Binding Source={StaticResource LightSensorProvider}, Path=LuxValue, Converter={StaticResource LightLevelToFontSizeConverter}, ConverterParameter=18pt}" />
        <Setter Property="LineHeight" Value="20" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="FontStretch" Value="Normal" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="TextIndent" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource Brush_ChromeSolidColor}" />
    </Style>

    <Style x:Key="ArticlePullQuoteFigureStyle" TargetType="{x:Type Figure}">
        <Setter Property="BorderThickness" Value="0,1,0,1" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="FontFamily" Value="Georgia" />
        <Setter Property="FontSize" Value="{Binding Source={StaticResource LightSensorProvider}, Path=LuxValue, Converter={StaticResource LightLevelToFontSizeConverter}, ConverterParameter=20pt}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontStyle" Value="Italic" />
        <Setter Property="FontStretch" Value="Normal" />
        <Setter Property="Margin" Value="0,10,0,10" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Width" Value="Column" />
        <Setter Property="HorizontalAnchor" Value="ColumnCenter" />
        <Setter Property="VerticalAnchor" Value="ParagraphTop" />
        <Setter Property="Foreground" Value="{DynamicResource Brush_ChromeSolidColor}" />
    </Style>

    <Style x:Key="ArticleFlowDocumentStyle" TargetType="{x:Type FlowDocument}">
        <Setter Property="ColumnWidth" Value="300" />
        <Setter Property="IsHyphenationEnabled" Value="True" />
        <Setter Property="IsOptimalParagraphEnabled" Value="True" />
        <Setter Property="PagePadding" Value="15,15,15,0"/>
        <Setter Property="Foreground" Value="{DynamicResource Brush_ChromeSolidColor}" />
    </Style>

    <Style x:Key="ArticleBylineDatelineFigureStyle" TargetType="{x:Type Figure}">
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Width" Value="Column" />
        <Setter Property="HorizontalAnchor" Value="ColumnCenter" />
        <Setter Property="VerticalAnchor" Value="ParagraphTop" />
    </Style>

    <Style x:Key="ArticleHyperlinkStyle" TargetType="{x:Type Hyperlink}">
        <Setter Property="Foreground" Value="#FF1E3BBB" />
    </Style>

    <Style x:Key="ArticleBoldSpanStyle" TargetType="{x:Type Span}">
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <Style x:Key="ArticleItalicSpanStyle" TargetType="{x:Type Span}">
        <Setter Property="FontStyle" Value="Italic" />
    </Style>

    <Style x:Key="ArticleUnderlineSpanStyle" TargetType="{x:Type Span}">
        <Setter Property="TextDecorations" Value="Underline" />
    </Style>

    <Style x:Key="StoryPhotoCredit" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="{Binding Source={StaticResource LightSensorProvider}, Path=LuxValue, Converter={StaticResource LightLevelToFontSizeConverter}, ConverterParameter=8pt}" />
        <Setter Property="TextAlignment" Value="Right" />
        <Setter Property="Foreground" Value="{DynamicResource Brush_ChromeSolidColor}" />
        <Setter Property="Margin" Value="0,2,0,0" />
    </Style>

    <Style x:Key="StoryPhotoCaption" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Georgia" />
        <Setter Property="FontSize" Value="{Binding Source={StaticResource LightSensorProvider}, Path=LuxValue, Converter={StaticResource LightLevelToFontSizeConverter}, ConverterParameter=10pt}" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="IsHyphenationEnabled" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource Brush_ChromeSolidColor}" />
        <Setter Property="Margin" Value="0,3,0,0" />
    </Style>

  <Style x:Key="ImageViewerCaption" TargetType="{x:Type TextBlock}">
    <Setter Property="FontFamily" Value="SegoeUI" />
    <Setter Property="FontSize" Value="{Binding Source={StaticResource LightSensorProvider}, Path=LuxValue, Converter={StaticResource LightLevelToFontSizeConverter}, ConverterParameter=7pt}" />
    <Setter Property="Foreground" Value="Black" />
    <Setter Property="Margin" Value="0,3,0,0" />
  </Style>

  <Style x:Key="HorizontalRule" TargetType="{x:Type Rectangle}">
        <Setter Property="Fill" Value="{DynamicResource Brush_ChromeSolidColor}" />
        <Setter Property="Height" Value="1" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>

    <Style x:Key="ArticleImagePrintStyle" TargetType="{x:Type SceReaderControls:PrintableStoryImageControl}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="DataContext" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=ImageReference}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type SceReaderControls:PrintableStoryImageControl}">
                    <StackPanel>
                        <StackPanel>
                            <Image Source="{TemplateBinding ImageSource}" />
                            <TextBlock x:Name="Caption" Text="{Binding Credit}" Style="{StaticResource StoryPhotoCredit}" />
              <TextBlock x:Name="Credit" Text="{Binding Caption}" Style="{StaticResource StoryPhotoCaption}" />
            </StackPanel>
                        <Rectangle Style="{StaticResource HorizontalRule}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ArticlePrintDocumentStyle" TargetType="{x:Type FlowDocument}" BasedOn="{StaticResource ArticleFlowDocumentStyle}">
        <Setter Property="PagePadding" Value="40,30"/>
    </Style>

  <Style x:Key="AuthorIssueFigureStyle" TargetType="{x:Type Figure}">
    <Setter Property="LineHeight" Value="0.01" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Width" Value="1Column"/>
    <Setter Property="VerticalAnchor" Value="ContentTop" />
    <Setter Property="HorizontalAnchor" Value="ContentLeft" />
  </Style>

  <Style x:Key="AuthorParagraphStyle" TargetType="{x:Type Paragraph}">
    <Setter Property="Background" Value="White"/>
    <Setter Property="FontFamily" Value="Calibri" />
    <Setter Property="FontSize" Value="{Binding Source={StaticResource LightSensorProvider}, Path=LuxValue, Converter={StaticResource LightLevelToFontSizeConverter}, ConverterParameter=16pt}" />
    <Setter Property="FontWeight" Value="Bold" />
    <Setter Property="FontStyle" Value="Normal" />
    <Setter Property="FontStretch" Value="Normal" />
    <Setter Property="Margin" Value="0,0,0,10" />
    <Setter Property="Foreground" Value="{DynamicResource Brush_ChromeSolidColor}" />
  </Style>

  <Style x:Key="IssueParagraphStyle" TargetType="{x:Type Paragraph}">
    <Setter Property="Background" Value="White"/>
    <Setter Property="FontFamily" Value="Calibri" />
    <Setter Property="FontSize" Value="{Binding Source={StaticResource LightSensorProvider}, Path=LuxValue, Converter={StaticResource LightLevelToFontSizeConverter}, ConverterParameter=14pt}" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="FontStyle" Value="Normal" />
    <Setter Property="FontStretch" Value="Normal" />
    <Setter Property="Margin" Value="0,0,0,10" />
    <Setter Property="Foreground" Value="{DynamicResource Brush_ChromeSolidColor}" />
  </Style>

  <Style x:Key="LinkToSampleCodeParagraphStyle" TargetType="{x:Type Paragraph}">
    <Setter Property="LineHeight" Value="0.01" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="Padding" Value="0" />
  </Style>

  <Style x:Key="LinkToSampleCodeFigureStyle" TargetType="{x:Type Figure}">
    <Setter Property="Width" Value="1Column" />
    <Setter Property="Background" Value="White"/>
    <Setter Property="VerticalAnchor" Value="ContentTop" />
    <Setter Property="HorizontalAnchor" Value="ContentLeft" />
    <Setter Property="FontFamily" Value="Calibri" />
    <Setter Property="FontSize" Value="{Binding Source={StaticResource LightSensorProvider}, Path=LuxValue, Converter={StaticResource LightLevelToFontSizeConverter}, ConverterParameter=14pt}" />
    <Setter Property="FontWeight" Value="Bold" />
    <Setter Property="FontStyle" Value="Normal" />
    <Setter Property="FontStretch" Value="Normal" />
    <Setter Property="Margin" Value="0,0,0,10" />
    <Setter Property="Foreground" Value="{DynamicResource Brush_ChromeSolidColor}" />
  </Style>

  <Style x:Key="BioParagraphStyle" TargetType="{x:Type Paragraph}">
    <Setter Property="Background" Value="White"/>
    <Setter Property="FontFamily" Value="Calibri" />
    <Setter Property="FontSize" Value="{Binding Source={StaticResource LightSensorProvider}, Path=LuxValue, Converter={StaticResource LightLevelToFontSizeConverter}, ConverterParameter=12pt}" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="FontStyle" Value="Normal" />
    <Setter Property="FontStretch" Value="Normal" />
    <Setter Property="Margin" Value="0,10,0,0" />
    <Setter Property="Foreground" Value="{DynamicResource Brush_ChromeSolidColor}" />
  </Style>

  <Style x:Key="CopyrightParagraphStyle" TargetType="{x:Type Paragraph}">
    <Setter Property="Background" Value="White"/>
    <Setter Property="FontFamily" Value="Calibri" />
    <Setter Property="FontSize" Value="{Binding Source={StaticResource LightSensorProvider}, Path=LuxValue, Converter={StaticResource LightLevelToFontSizeConverter}, ConverterParameter=11pt}" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="FontStyle" Value="Normal" />
    <Setter Property="FontStretch" Value="Normal" />
    <Setter Property="Margin" Value="0,10,0,5" />
    <Setter Property="Foreground" Value="{DynamicResource Brush_ChromeSolidColor}" />
  </Style>

  <!-- FlowDocumentStyleProvider -->
    <MsdnReader:MsdnFlowDocumentStyleProvider x:Key="StoryFlowDocumentStyleProvider"
    ArticleTitleFigureStyle="{StaticResource ArticleTitleStyle}"
   	ArticleImageFigureStyle="{StaticResource ImageFigureStyle}"
    ArticleFigureContainerParagraphStyle="{StaticResource FigureContainerStyle}"
    ArticleBylineRunStyle="{StaticResource ArticleBylineStyle}"
    ArticleDateRunStyle="{StaticResource ArticleDateStyle}"
    ArticleBodyTextParagraphStyle="{StaticResource ArticleBodyTextStyle}"
    ArticleSectionTitleParagraphStyle="{StaticResource ArticleSectionTitleStyle}"
    ArticlePullQuoteFigureStyle="{StaticResource ArticlePullQuoteFigureStyle}"
    ArticleFlowDocumentStyle="{StaticResource ArticleFlowDocumentStyle}"
    ArticleBylineDateFigureStyle="{StaticResource ArticleBylineDatelineFigureStyle}"    
    ArticleHyperlinkStyle="{StaticResource ArticleHyperlinkStyle}"       
    ArticleBoldSpanStyle="{StaticResource ArticleBoldSpanStyle}"       
    ArticleItalicSpanStyle="{StaticResource ArticleItalicSpanStyle}"       
    ArticleUnderlineSpanStyle="{StaticResource ArticleUnderlineSpanStyle}"
    ArticleImagePrintStyle="{StaticResource ArticleImagePrintStyle}"
    ArticlePrintDocumentStyle="{StaticResource ArticlePrintDocumentStyle}"
	ArticleCodeStyle="{StaticResource ArticleCodeStyle}"
  AuthorIssueFigureStyle="{StaticResource AuthorIssueFigureStyle}"
  AuthorParagraphStyle="{StaticResource AuthorParagraphStyle}"
  IssueParagraphStyle="{StaticResource IssueParagraphStyle}"
  LinkToSampleCodeParagraphStyle="{StaticResource LinkToSampleCodeParagraphStyle}"
  LinkToSampleCodeFigureStyle="{StaticResource LinkToSampleCodeFigureStyle}"
  BioParagraphStyle="{StaticResource BioParagraphStyle}"
  CopyrightParagraphStyle="{StaticResource CopyrightParagraphStyle}"
    />


    <!-- Main UI color for StoryViewer chrome -->
  <SolidColorBrush x:Key="Background_ChromeSolidColor" Color="#FF1B89C8" />

  <!-- Start: StoryImageControl, caption, credit, rule -->
  <Style x:Key="StoryImageButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Command" Value="{Binding Source={x:Static MsdnReader:MsdnServiceProvider.ViewManager}, Path=MsdnCommands.OpenImageViewerCommand}" />
    <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=.}" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}" >
          <Grid>
            <Rectangle Fill="White" />
            <ContentPresenter />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type SceReaderControls:StoryImageControl}">
    <Setter Property="Focusable" Value="False" />
    <!--<Setter Property="Cursor" Value="Hand" />-->
    <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
    <Setter Property="DataContext" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=ImageReference}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type SceReaderControls:StoryImageControl}">
          <Button Style="{StaticResource StoryImageButtonStyle}" Background="White">
            <SceReaderControls:ViewportBox HorizontalAlignment="Center">
              <StackPanel VerticalAlignment="Center">
                  <Image Source="{TemplateBinding ImageSource}" StretchDirection="DownOnly" HorizontalAlignment="Center" />
                  <TextBlock x:Name="Caption" Text="{Binding Credit}" Style="{StaticResource StoryPhotoCredit}" />
                  <TextBlock x:Name="Credit" Text="{Binding Caption}" Style="{StaticResource StoryPhotoCaption}" />
                  <TextBlock x:Name="ImageViewer" Text="CLICK TO ENLARGE IMAGE" Style="{StaticResource ImageViewerCaption}" />
                  <Rectangle Style="{StaticResource Rectangle_HorizontalRule}" />
              </StackPanel>
            </SceReaderControls:ViewportBox>
          </Button>
          <ControlTemplate.Triggers>
            <Trigger Property="Text" Value="" SourceName="Credit">
              <Setter Property="Visibility" Value="Collapsed" TargetName="Credit"/>
            </Trigger>
            <Trigger Property="Text" Value="" SourceName="Caption">
              <Setter Property="Visibility" Value="Collapsed" TargetName="Caption"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="ImageSource" Value="{x:Null}">
        <Setter Property="Visibility" Value="Collapsed" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <!-- End: StoryImageControl, caption, credit, rule -->

  <!-- Start: StoryAdControl resources -->
  <Style x:Key="AdDeclarationStyle" TargetType="{x:Type TextBlock}">
    <Setter Property="FontFamily" Value="Arial" />
    <Setter Property="FontSize" Value="{Binding Source={StaticResource LightSensorProvider}, Path=LuxValue, Converter={StaticResource LightLevelToFontSizeConverter}, ConverterParameter=6pt}" />
    <Setter Property="TextAlignment" Value="Center" />
  </Style>

  <Style TargetType="{x:Type SceReaderControls:StoryAdControl}">
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
    <Setter Property="DataContext" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=Advertisement}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type SceReaderControls:StoryAdControl}">
          <StackPanel Margin="0,0,0,3">
            <ContentPresenter />
            <Rectangle Style="{StaticResource Rectangle_HorizontalRule}" />
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="Advertisement" Value="{x:Null}">
        <Setter Property="Visibility" Value="Collapsed" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <!-- End: StoryAdControl resources -->

  <!-- Start: Slider resources -->

  <!-- Slider Styling -->

  <SolidColorBrush x:Key="Background_ZoomSlider" Color="#FFCBD4DB" />
  <LinearGradientBrush x:Key="Stroke_ZoomSliderThumbPath" StartPoint="0.500008,0.80667" EndPoint="0.500008,0.193337">
    <GradientStop Color="#FF493F0B" Offset="0"/>
    <GradientStop Color="#FF42390A" Offset="0.987288"/>
  </LinearGradientBrush>

  <!-- Slider thumb style -->
  <Style TargetType="{x:Type Thumb}" x:Key="SliderThumbStyle">
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="Height" Value="15"/>
    <Setter Property="Width" Value="10"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Grid>
            <Viewbox HorizontalAlignment="Stretch" Margin="0,0,0,0" Stretch="Fill">
              <Path x:Name="ThumbPath" Stretch="Fill" Fill="{StaticResource Background_ChromeSolidColor}"
                    Data="F1 M 48.1389,32.094L 48.1389,32.094C 50.9617,32.094 53.2499,34.3823 53.2499,37.2051L 53.2499,42.9829C 53.2499,45.8057 50.9617,48.094 48.1389,48.094L 48.1389,48.094C 45.316,48.094 43.0278,45.8057 43.0278,42.9829L 43.0278,37.2051C 43.0278,34.3823 45.316,32.094 48.1389,32.094 Z "
                    StrokeThickness="0.666594" StrokeLineJoin="Round" HorizontalAlignment="Stretch" Margin="0,0,0,0"
                    Stroke="{StaticResource Stroke_ZoomSliderThumbPath}">
                <Path.BitmapEffect>
                  <DropShadowBitmapEffect Softness="0.377953" ShadowDepth="3.77953" Opacity="0.599998" Color="#FF000000" Direction="270" Noise="0"/>
                </Path.BitmapEffect>
              </Path>
            </Viewbox>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Slider repeat button style. Set to transparent so these buttons don't show up over the rule -->
  <Style TargetType="{x:Type RepeatButton}" x:Key="SliderRepeatButtonStyle">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
    <Setter Property="IsTabStop" Value="false"/>
    <Setter Property="Focusable" Value="false"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Grid>
            <Rectangle Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type Slider}" >
    <Setter Property="Background" Value="{StaticResource Background_ZoomSlider}" />
    <Setter Property="KeyboardNavigation.IsTabStop" Value="true" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Slider}">
          <Grid x:Name="GridRoot">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- TickBar shows the ticks for Slider -->
            <TickBar Fill="transparent" Visibility="Collapsed" x:Name="TopTick" Height="4" SnapsToDevicePixels="True" Placement="Top" />
            <Border Grid.Row="1" Margin="0" x:Name="Border" Height="4" Background="transparent"
               BorderThickness="{TemplateBinding BorderThickness}" >
              <Grid>
                <Viewbox VerticalAlignment="Stretch" Stretch="Fill">
                  <Path Fill="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}" Stretch="Fill" StrokeThickness="6.66667" StrokeLineJoin="Round" Stroke="#FF2E2424"
                    Data="F1 M 22.582,138.985L 833.809,138.985C 837.989,138.985 841.377,142.373 841.377,146.553L 841.377,172.326C 841.377,176.506 837.989,179.894 833.809,179.894L 22.582,179.894C 18.4022,179.894 15.0138,176.506 15.0138,172.326L 15.0138,146.553C 15.0138,142.373 18.4022,138.985 22.582,138.985 Z ">
                  </Path>
                </Viewbox>
              </Grid>
            </Border>
            <!-- The Track lays out the repeat buttons and thumb -->
            <Track Grid.Row="1" x:Name="PART_Track">
              <Track.Thumb>
                <Thumb Style="{StaticResource SliderThumbStyle}" x:Name="thumb"/>
              </Track.Thumb>
              <Track.IncreaseRepeatButton>
                <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}" Command="Slider.IncreaseLarge"/>
              </Track.IncreaseRepeatButton>
              <Track.DecreaseRepeatButton>
                <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}" Command="Slider.DecreaseLarge"/>
              </Track.DecreaseRepeatButton>
            </Track>
            <TickBar Visibility="Collapsed" Grid.Row="2" x:Name="BottomTick" Height="4" SnapsToDevicePixels="True" Placement="Bottom" Fill="{TemplateBinding Foreground}"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
              <Setter Property="Visibility" Value="Visible" TargetName="TopTick"/>
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
              <Setter Property="Visibility" Value="Visible" TargetName="BottomTick"/>
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
              <Setter Property="Visibility" Value="Visible" TargetName="TopTick"/>
              <Setter Property="Visibility" Value="Visible" TargetName="BottomTick"/>
            </Trigger>
            <!-- Use a rotation to create a Vertical Slider form the default Horizontal -->
            <Trigger Property="Orientation" Value="Vertical">
              <Setter Property="LayoutTransform" TargetName="GridRoot">
                <Setter.Value>
                  <RotateTransform Angle="-90"/>
                </Setter.Value>
              </Setter>
              <!-- Track rotates itself based on orientation so need to force it back -->
              <Setter TargetName="PART_Track" Property="Orientation" Value="Horizontal"/>
            </Trigger>

          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type SceReaderControls:HeaderedSelector}">
    <Setter Property="KeyboardNavigation.TabNavigation" Value="Continue" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type SceReaderControls:HeaderedSelector}">
          <StackPanel Width="{TemplateBinding Width}">
            <ItemsPresenter Margin="2,0,0,0" />
            <Slider HorizontalAlignment="Center"
                    VerticalAlignment="Bottom"
                    x:Name="ZoomSlider"
                    Margin="7,0,7,10"
                    IsSnapToTickEnabled="{TemplateBinding IsSnapToTickEnabled}"
                    TickFrequency="{TemplateBinding TickFrequency}"
                    Minimum="{TemplateBinding Minimum}"
                    Maximum="{TemplateBinding Maximum}"
                    LargeChange="{TemplateBinding LargeChange}"
                    SmallChange="{TemplateBinding SmallChange}">
              <Slider.Value>
                <Binding Mode="TwoWay" Path="Value" RelativeSource="{RelativeSource TemplatedParent}"/>
              </Slider.Value>
            </Slider>
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <StackPanel Orientation="Horizontal" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemContainerStyle">
      <Setter.Value>
        <Style TargetType="{x:Type ListBoxItem}">
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type ListBoxItem}">
                <Border Padding="0" >
                  <ContentPresenter Content ="{TemplateBinding Content}" />
                </Border>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
          <Setter Property="KeyboardNavigation.IsTabStop" Value="false" />
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="Focusable" Value="False" />
  </Style>

  <Style x:Key="HeaderedSelectorButtonStyle" TargetType="{x:Type Button}">
    <Style.Triggers>
      <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="True">
        <Setter Property="FontWeight" Value="700" />
        <Setter Property="Background" Value="White" />
      </DataTrigger>
    </Style.Triggers>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Rectangle x:Name="Rectangle1" Fill="Transparent" Stretch="Fill"/>
            <ContentPresenter x:Name="ContentPresenter1" VerticalAlignment="Bottom" HorizontalAlignment="Center"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="Width" Value="20" />
    <Setter Property="Height" Value="30" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Background" Value="White" />
    <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="FontFamily" Value="Candara" />
    <Setter Property="Foreground" Value="{StaticResource Background_ChromeSolidColor}" />
  </Style>
  <!-- End: Slider resources -->

  <!-- Start: Style for ad control in blank area -->
  <Style TargetType="{x:Type SceReaderControls:BlankAreaAdControl}">
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type SceReaderControls:BlankAreaAdControl}">
          <StackPanel>
            <ContentPresenter />
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!-- End: Style for ad control in blank area -->

  <!-- Start: Story template resources -->
  <SceReaderData:PageTemplateCollection x:Key="DefaultPageTemplateCollection">
    <SceReaderData:ImagePageTemplate />
    <!--<SceReaderData:AdPageTemplate Width="1Column" MinHeight="50px" MaxHeight="1Column"/>
    <SceReaderData:AdPageTemplate Width="2Column" MinHeight="50px" MaxHeight="0.5Column"/>
    <SceReaderData:AdPageTemplate Width="1Content" MinHeight="50px" MaxHeight="0.3Column" VerticalAnchor="ContentBottom" HorizontalAnchor="ContentCenter"/>-->
  </SceReaderData:PageTemplateCollection>

  <!-- Start: Last page template resources -->
  <ControlTemplate x:Key="PageBlankAreaTemplate" TargetType="{x:Type SceReaderControls:SizeTemplateControl}">
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition Height="*" />
      </Grid.RowDefinitions>
      <SceReaderControls:BlankAreaAdControl Grid.Row="0" AdSelectionMode="BestFit"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="ColumnBlankAreaTemplate" TargetType="{x:Type SceReaderControls:SizeTemplateControl}">
    <Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" >
      <Viewbox>
        <Image Source="pack://application:,,,/Resources/Images/msdnreaderwatermark.png" Opacity="0.5"/>
      </Viewbox>
    </Border>
  </ControlTemplate>

  <SceReaderControls:SizeControlTemplateCollection x:Key="PageBlankAreaTemplates">
    <SceReaderControls:SizeControlTemplate Template="{StaticResource PageBlankAreaTemplate}"/>
  </SceReaderControls:SizeControlTemplateCollection>

  <SceReaderControls:SizeControlTemplateCollection x:Key="ColumnBlankAreaTemplates">
    <SceReaderControls:SizeControlTemplate Template="{StaticResource ColumnBlankAreaTemplate}"/>
  </SceReaderControls:SizeControlTemplateCollection>

  <SceReaderData:ImagePageTemplate x:Key="SinglePageImageTemplate" HorizontalAnchor="ContentLeft" VerticalAnchor="ContentBottom" />
  <ControlTemplate x:Key="PageBlankAreaControlTemplate">
    <SceReaderControls:SizeTemplateControl Templates="{StaticResource PageBlankAreaTemplates}" />
  </ControlTemplate>
  <ControlTemplate x:Key="ColumnBlankAreaControlTemplate">
    <SceReaderControls:SizeTemplateControl Templates="{StaticResource ColumnBlankAreaTemplates}" />
  </ControlTemplate>
  <SceReaderData:LastPageTemplate x:Key="DefaultLastPageTemplate" SinglePageImageTemplate="{StaticResource SinglePageImageTemplate}"
                                   PageBlankAreaTemplate="{StaticResource PageBlankAreaControlTemplate}" ColumnBlankAreaTemplate="{StaticResource ColumnBlankAreaControlTemplate}"
                                   PageOverridesColumn="True" />

  <!-- End: Last page template resources -->

  <SceReaderData:PageTemplateSource x:Key="DefaultPageTemplateSource" LastPageTemplate="{StaticResource DefaultLastPageTemplate}" RepeatingPageTemplates="{StaticResource DefaultPageTemplateCollection}" />

  <SceReaderData:StoryTemplateCollection x:Key="DefaultStoryTemplateCollection">
    <SceReaderData:StoryTemplate PageTemplateSource="{StaticResource DefaultPageTemplateSource}" />
  </SceReaderData:StoryTemplateCollection>

  <SceReaderData:StoryTemplateSource x:Key="DefaultStoryTemplateSource" Templates="{StaticResource DefaultStoryTemplateCollection}" />
  <!-- End: Story template resources -->

  <!-- Start: Annotation button styles -->

  <DrawingBrush x:Key="SaveDrawingBrush" Viewbox="0,0,37,37" ViewboxUnits="Absolute">
    <DrawingBrush.Drawing>
      <DrawingGroup>
        <DrawingGroup.Transform>
          <MatrixTransform Matrix="1,0,0,1,0.166499999999999,0.166499999999999"/>
        </DrawingGroup.Transform>
        <DrawingGroup>
          <DrawingGroup.Transform>
            <MatrixTransform Matrix="1.96432111000991,0,0,1.96432111000991,0,0"/>
          </DrawingGroup.Transform>
          <DrawingGroup>
            <DrawingGroup>
              <DrawingGroup.Transform>
                <MatrixTransform Matrix="1,0,0,1,1.01328E-06,-2.95043E-05"/>
              </DrawingGroup.Transform>
              <GeometryDrawing Geometry="M0.66659502,0.666595 L13.555103,0.666595 17.999904,4.6666071 17.999904,18.000004 0.66659502,18.000004 0.66659502,0.666595 z">
                <GeometryDrawing.Pen>
                  <Pen Brush="#FFFFFFFF" DashCap="Flat" EndLineCap="Flat" LineJoin="Round" MiterLimit="10" StartLineCap="Flat" Thickness="1.33319"/>
                </GeometryDrawing.Pen>
              </GeometryDrawing>
            </DrawingGroup>
            <DrawingGroup>
              <DrawingGroup.Transform>
                <MatrixTransform Matrix="1,0,0,1,2.88876,1.27765"/>
              </DrawingGroup.Transform>
              <GeometryDrawing Brush="#FFFFFFFF" Geometry="M-8.9874003E-08,1.335144E-09 L11.444106,1.335144E-09 13.333301,2.66669 13.333301,5.27783 -8.9874003E-08,5.27783 -8.9874003E-08,1.335144E-09 z"/>
            </DrawingGroup>
            <DrawingGroup>
              <DrawingGroup.Transform>
                <MatrixTransform Matrix="1,0,0,1,3.11124,11.5"/>
              </DrawingGroup.Transform>
              <GeometryDrawing>
                <GeometryDrawing.Geometry>
                  <RectangleGeometry RadiusX="0" RadiusY="0" Rect="0.666595,0.666595,11.50001,5.55554"/>
                </GeometryDrawing.Geometry>
                <GeometryDrawing.Pen>
                  <Pen Brush="#FFFFFFFF" DashCap="Flat" EndLineCap="Flat" LineJoin="Round" MiterLimit="10" StartLineCap="Flat" Thickness="1.33319"/>
                </GeometryDrawing.Pen>
              </GeometryDrawing>
            </DrawingGroup>
            <DrawingGroup>
              <DrawingGroup.Transform>
                <MatrixTransform Matrix="1,0,0,1,3.05551,14.6111"/>
              </DrawingGroup.Transform>
              <GeometryDrawing Geometry="M0.66659497,0.66659471 L12.344005,0.66659471">
                <GeometryDrawing.Pen>
                  <Pen Brush="#FFFFFFFF" DashCap="Flat" EndLineCap="Flat" LineJoin="Round" MiterLimit="10" StartLineCap="Flat" Thickness="1.33319"/>
                </GeometryDrawing.Pen>
              </GeometryDrawing>
            </DrawingGroup>
          </DrawingGroup>
        </DrawingGroup>
      </DrawingGroup>
    </DrawingBrush.Drawing>
  </DrawingBrush>

  <DrawingBrush x:Key="PrintDrawingBrush" Viewbox="0,0,37,37" ViewboxUnits="Absolute">
    <DrawingBrush.Drawing>
      <DrawingGroup>
        <DrawingGroup.Transform>
          <MatrixTransform Matrix="1,0,0,1,0.807471812672429,0.444500000000001"/>
        </DrawingGroup.Transform>
        <DrawingGroup>
          <DrawingGroup.Transform>
            <MatrixTransform Matrix="1.63316901089955,0,0,1.63316901089955,0,0"/>
          </DrawingGroup.Transform>
          <DrawingGroup>
            <DrawingGroup>
              <DrawingGroup.Transform>
                <MatrixTransform Matrix="1,0,0,1,4,-2.95043E-05"/>
              </DrawingGroup.Transform>
              <GeometryDrawing Geometry="M0.66659477,0.666595 L8.7747019,0.666595 12.777805,4.6665799 12.777805,10.666605 0.66659477,10.666605 0.66659477,0.666595 z">
                <GeometryDrawing.Pen>
                  <Pen Brush="#FFFFFFFF" DashCap="Flat" EndLineCap="Flat" LineJoin="Round" MiterLimit="10" StartLineCap="Flat" Thickness="1.33319"/>
                </GeometryDrawing.Pen>
              </GeometryDrawing>
            </DrawingGroup>
            <DrawingGroup>
              <DrawingGroup.Transform>
                <MatrixTransform Matrix="1,0,0,1,1.01328E-06,5.77774"/>
              </DrawingGroup.Transform>
              <GeometryDrawing Geometry="M4.6665955,13.888806 L0.66659502,13.888806 0.66659502,5.999935 4.9999351,0.66659477">
                <GeometryDrawing.Pen>
                  <Pen Brush="#FFFFFFFF" DashCap="Flat" EndLineCap="Flat" LineJoin="Round" MiterLimit="10" StartLineCap="Flat" Thickness="1.33319"/>
                </GeometryDrawing.Pen>
              </GeometryDrawing>
            </DrawingGroup>
            <DrawingGroup>
              <DrawingGroup.Transform>
                <MatrixTransform Matrix="1,0,0,1,16,5.77774"/>
              </DrawingGroup.Transform>
              <GeometryDrawing Geometry="M0.99989868,13.888806 L4.9999342,13.888806 4.9999342,5.999935 0.66659573,0.66659477">
                <GeometryDrawing.Pen>
                  <Pen Brush="#FFFFFFFF" DashCap="Flat" EndLineCap="Flat" LineJoin="Round" MiterLimit="10" StartLineCap="Flat" Thickness="1.33319"/>
                </GeometryDrawing.Pen>
              </GeometryDrawing>
            </DrawingGroup>
            <DrawingGroup>
              <DrawingGroup.Transform>
                <MatrixTransform Matrix="1,0,0,1,3.88883,16.3333"/>
              </DrawingGroup.Transform>
              <GeometryDrawing>
                <GeometryDrawing.Geometry>
                  <RectangleGeometry RadiusX="0" RadiusY="0" Rect="0.666595,0.666595,12.22231,4.4444"/>
                </GeometryDrawing.Geometry>
                <GeometryDrawing.Pen>
                  <Pen Brush="#FFFFFFFF" DashCap="Flat" EndLineCap="Flat" LineJoin="Round" MiterLimit="10" StartLineCap="Flat" Thickness="1.33319"/>
                </GeometryDrawing.Pen>
              </GeometryDrawing>
            </DrawingGroup>
          </DrawingGroup>
        </DrawingGroup>
      </DrawingGroup>
    </DrawingBrush.Drawing>
  </DrawingBrush>

  <DrawingBrush x:Key="EmailDrawingBrush" Viewbox="0,0,21.554,14.776708763042" ViewboxUnits="Absolute">
    <DrawingBrush.Drawing>
      <DrawingGroup>
        <DrawingGroup.Transform>
          <MatrixTransform Matrix="0.999939690006634,0,0,0.999939690006634,0,0"/>
        </DrawingGroup.Transform>
        <DrawingGroup>
          <DrawingGroup>
            <DrawingGroup.Transform>
              <MatrixTransform Matrix="1,0,0,1,-2.95043E-05,-2.95043E-05"/>
            </DrawingGroup.Transform>
            <GeometryDrawing>
              <GeometryDrawing.Geometry>
                <RectangleGeometry RadiusX="0" RadiusY="0" Rect="0.666595,0.666595,20.22221,13.44441"/>
              </GeometryDrawing.Geometry>
              <GeometryDrawing.Pen>
                <Pen Brush="#FFFFFFFF" DashCap="Flat" EndLineCap="Flat" LineJoin="Round" MiterLimit="10" StartLineCap="Flat" Thickness="1.33319"/>
              </GeometryDrawing.Pen>
            </GeometryDrawing>
          </DrawingGroup>
          <DrawingGroup>
            <DrawingGroup.Transform>
              <MatrixTransform Matrix="1,0,0,1,2.99997,2.55551"/>
            </DrawingGroup.Transform>
            <GeometryDrawing Geometry="M0.66659507,0.88882528 L0.66659507,1.2221957 7.1111217,7.6665947 8.9999177,7.6665947 15.333205,0.66659497">
              <GeometryDrawing.Pen>
                <Pen Brush="#FFFFFFFF" DashCap="Flat" EndLineCap="Flat" LineJoin="Round" MiterLimit="10" StartLineCap="Flat" Thickness="1.33319"/>
              </GeometryDrawing.Pen>
            </GeometryDrawing>
          </DrawingGroup>
          <DrawingGroup>
            <DrawingGroup.Transform>
              <MatrixTransform Matrix="1,0,0,1,2.99997,7.2222"/>
            </DrawingGroup.Transform>
            <GeometryDrawing Geometry="M0.66659507,4.2221353 L4.5554451,0.66659487">
              <GeometryDrawing.Pen>
                <Pen Brush="#FFFFFFFF" DashCap="Flat" EndLineCap="Flat" LineJoin="Round" MiterLimit="10" StartLineCap="Flat" Thickness="1.33319"/>
              </GeometryDrawing.Pen>
            </GeometryDrawing>
          </DrawingGroup>
          <DrawingGroup>
            <DrawingGroup.Transform>
              <MatrixTransform Matrix="1,0,0,1,13.5555,7.2222"/>
            </DrawingGroup.Transform>
            <GeometryDrawing Geometry="M4.7777345,4.2221353 L0.66659474,0.66659487">
              <GeometryDrawing.Pen>
                <Pen Brush="#FFFFFFFF" DashCap="Flat" EndLineCap="Flat" LineJoin="Round" MiterLimit="10" StartLineCap="Flat" Thickness="1.33319"/>
              </GeometryDrawing.Pen>
            </GeometryDrawing>
          </DrawingGroup>
        </DrawingGroup>
      </DrawingGroup>
    </DrawingBrush.Drawing>
  </DrawingBrush>

  <DrawingBrush x:Key="NoteDrawingBrush" Viewbox="0,0,37,37" ViewboxUnits="Absolute">
    <DrawingBrush.Drawing>
      <DrawingGroup>
        <DrawingGroup.Transform>
          <MatrixTransform Matrix="1,0,0,1,0.233499999999999,1.20933113353125"/>
        </DrawingGroup.Transform>
        <DrawingGroup>
          <DrawingGroup.Transform>
            <MatrixTransform Matrix="1.43083743919538,0,0,1.43083743919538,0,0"/>
          </DrawingGroup.Transform>
          <DrawingGroup>
            <DrawingGroup>
              <DrawingGroup.Transform>
                <MatrixTransform Matrix="1,0,0,1,3.15309E-05,3.15309E-05"/>
              </DrawingGroup.Transform>
              <GeometryDrawing Geometry="M5.1141796,18.555505 L0.66659502,18.555505 0.66659502,0.66659502 11.218894,0.66659502 15.666605,5.9999197 15.666605,9.2221562">
                <GeometryDrawing.Pen>
                  <Pen Brush="#FFFFFFFF" DashCap="Flat" EndLineCap="Flat" LineJoin="Round" MiterLimit="10" StartLineCap="Flat" Thickness="1.33319"/>
                </GeometryDrawing.Pen>
              </GeometryDrawing>
            </DrawingGroup>
            <DrawingGroup>
              <DrawingGroup.Transform>
                <MatrixTransform Matrix="1,0,0,1,5.92511,4.73187"/>
              </DrawingGroup.Transform>
              <DrawingGroup>
                <DrawingGroup>
                  <DrawingGroup.Transform>
                    <MatrixTransform Matrix="1,0,0,1,0.526216,2.58469"/>
                  </DrawingGroup.Transform>
                  <GeometryDrawing Geometry="M11.194599,0.66659493 L15.908705,5.3806729 5.3805911,15.908706 0.66659494,11.194677 11.194599,0.66659493 z">
                    <GeometryDrawing.Pen>
                      <Pen Brush="#FFFFFFFF" DashCap="Flat" EndLineCap="Flat" LineJoin="Round" MiterLimit="10" StartLineCap="Flat" Thickness="1.33319"/>
                    </GeometryDrawing.Pen>
                  </GeometryDrawing>
                </DrawingGroup>
                <DrawingGroup>
                  <DrawingGroup.Transform>
                    <MatrixTransform Matrix="1,0,0,1,11.9577,0.341737"/>
                  </DrawingGroup.Transform>
                  <GeometryDrawing Geometry="M0.666595,1.6917116 C2.0333825,0.32488945 4.2494623,0.32488945 5.6162499,1.6917116 6.9831374,3.0584697 6.9831374,5.2745867 5.6162499,6.6414749">
                    <GeometryDrawing.Pen>
                      <Pen Brush="#FFFFFFFF" DashCap="Flat" EndLineCap="Flat" LineJoin="Round" MiterLimit="10" StartLineCap="Flat" Thickness="1.33319"/>
                    </GeometryDrawing.Pen>
                  </GeometryDrawing>
                </DrawingGroup>
                <DrawingGroup>
                  <DrawingGroup.Transform>
                    <MatrixTransform Matrix="1,0,0,1,0,14.3293"/>
                  </DrawingGroup.Transform>
                  <GeometryDrawing Brush="#FFFFFFFF" Geometry="M0.32842999,7.3241038E-08 L5.4358499,5.10742 0,5.10742 0.32842999,7.3241038E-08 z"/>
                </DrawingGroup>
              </DrawingGroup>
            </DrawingGroup>
          </DrawingGroup>
        </DrawingGroup>
      </DrawingGroup>
    </DrawingBrush.Drawing>
  </DrawingBrush>

  <Style x:Key="SaveButtonStyle" BasedOn="{x:Null}" TargetType="{x:Type Button}">
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid Name="ButtonGrid">
            <Grid.RowDefinitions>
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Border Name="HighlightBorder" CornerRadius="3,0,0,3" Grid.RowSpan="2" Margin="-3,-3,-3,0"/>
            <Border Grid.Row="0" Background="{StaticResource SaveDrawingBrush}" Width="20" HorizontalAlignment="Center"/>
            <TextBlock Grid.Row="1" TextAlignment="Left" Width="Auto" Height="Auto" FontFamily="Candara" FontSize="{Binding Source={StaticResource LightSensorProvider}, Path=LuxValue, Converter={StaticResource LightLevelToFontSizeConverter}, ConverterParameter=11pt}" Foreground="#FFFFFFFF" VerticalAlignment="Bottom">SAVE</TextBlock>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" TargetName="HighlightBorder" Value="#5579b8d1"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter Property="Opacity" TargetName="ButtonGrid" Value="0.75"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Command" Value="{Binding Source={x:Static SceReader:ServiceProvider.ViewManager}, Path=PersistenceCommands.SaveStoryToDesktopCommand}" />
    <Setter Property="CommandParameter" Value="{Binding Path=.}" />
  </Style>

  <Style x:Key="PrintButtonStyle" BasedOn="{x:Null}" TargetType="{x:Type Button}">
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid Name="ButtonGrid">
            <Grid.RowDefinitions>
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Border Name="HighlightBorder" CornerRadius="0,0,0,0" Grid.RowSpan="2" Margin="-3,-3,-3,0"/>
            <Border Grid.Row="0" Background="{StaticResource PrintDrawingBrush}" Width="20" HorizontalAlignment="Center"/>
            <TextBlock Grid.Row="1" TextAlignment="Left" Width="Auto" Height="Auto" FontFamily="Candara" FontSize="{Binding Source={StaticResource LightSensorProvider}, Path=LuxValue, Converter={StaticResource LightLevelToFontSizeConverter}, ConverterParameter=11pt}" Foreground="#FFFFFFFF" VerticalAlignment="Bottom">PRINT</TextBlock>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" TargetName="HighlightBorder" Value="#5579b8d1"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter Property="Opacity" TargetName="ButtonGrid" Value="0.75"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Command" Value="{Binding Source={x:Static SceReader:ServiceProvider.ViewManager}, Path=PersistenceCommands.PrintStoryCommand}" />
    <Setter Property="CommandParameter" Value="{Binding Path=Story}" />
  </Style>

  <Style x:Key="EmailButtonStyle" BasedOn="{x:Null}" TargetType="{x:Type Button}">
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid Name="ButtonGrid">
            <Grid.RowDefinitions>
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Border Name="HighlightBorder" CornerRadius="0,0,0,0" Grid.RowSpan="2" Margin="-3,-3,-3,0"/>
            <Border Grid.Row="0" Background="{StaticResource EmailDrawingBrush}" Width="20" HorizontalAlignment="Center"/>
            <TextBlock Grid.Row="1" TextAlignment="Left" Width="Auto" Height="Auto" FontFamily="Candara" FontSize="{Binding Source={StaticResource LightSensorProvider}, Path=LuxValue, Converter={StaticResource LightLevelToFontSizeConverter}, ConverterParameter=11pt}" Foreground="#FFFFFFFF" VerticalAlignment="Bottom">EMAIL</TextBlock>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" TargetName="HighlightBorder" Value="#5579b8d1"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter Property="Opacity" TargetName="ButtonGrid" Value="0.75"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Command" Value="{Binding Source={x:Static SceReader:ServiceProvider.ViewManager}, Path=PersistenceCommands.EmailStoryCommand}" />
    <Setter Property="CommandParameter" Value="{Binding Path=.}" />
  </Style>

  <Style x:Key="MenuSeparatorRectangleStyle" TargetType="{x:Type Rectangle}">
    <Setter Property="Fill" Value="#FFFFFFFF" />
    <Setter Property="Width" Value="1" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
  </Style>

  <Style x:Key="AnnotationsMenuStyle" TargetType="{x:Type Menu}">
    <Setter Property="Padding" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Menu}">
          <Border Name="HighlightBorder" CornerRadius="0,3,3,0" Grid.RowSpan="2" Margin="-3,-2,-3,0">
            <ItemsPresenter Name="ButtonGrid" Margin="0,2,2,0"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" TargetName="HighlightBorder" Value="#5579b8d1"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <DrawingBrush x:Key="AnnotationMenuBackground" Viewbox="0,0,240,48" ViewboxUnits="Absolute">
    <DrawingBrush.Drawing>
      <DrawingGroup>
        <GeometryDrawing Brush="{StaticResource Background_ChromeSolidColor}">
          <GeometryDrawing.Geometry>
            <RectangleGeometry RadiusX="0" RadiusY="0" Rect="0.666595,0.666595,238.66681,46.66681"/>
          </GeometryDrawing.Geometry>
          <GeometryDrawing.Pen>
            <Pen Brush="{StaticResource Background_ChromeSolidColor}" DashCap="Flat" EndLineCap="Flat" LineJoin="Miter" MiterLimit="10" StartLineCap="Flat" Thickness="1.33319"/>
          </GeometryDrawing.Pen>
        </GeometryDrawing>
        <DrawingGroup>
          <DrawingGroup.Transform>
            <MatrixTransform Matrix="1,0,0,1,0.667,0.667"/>
          </DrawingGroup.Transform>
          <GeometryDrawing Geometry="M5.3326884,-4.0358911E-08 L233.33498,-4.0358911E-08 C236.27999,-4.0358911E-08 238.667,2.3875453 238.667,5.3326925 L238.667,32.361 C206.18189,24.930308 158.77973,20.247776 105.99054,20.247776 66.252608,20.247776 29.567682,22.901137 4.6081702E-08,27.382672 L4.6081702E-08,5.3326925 C4.6081702E-08,2.3875453 2.3875183,-4.0358911E-08 5.3326884,-4.0358911E-08 z">
            <GeometryDrawing.Brush>
              <LinearGradientBrush EndPoint="0.477708,0.87289" StartPoint="0.477708,0.00766487">
                <GradientStop Color="#1AFFFFFF" Offset="0"/>
                <GradientStop Color="#00FFFFFF" Offset="0.987288"/>
              </LinearGradientBrush>
            </GeometryDrawing.Brush>
          </GeometryDrawing>
        </DrawingGroup>
      </DrawingGroup>
    </DrawingBrush.Drawing>
  </DrawingBrush>
  <!-- End: Annotation menu style -->

  <!--Templates for our button panel. As the width gets narrow, we'll swap this one out with a blank one so the buttons don't collide-->
  <ControlTemplate x:Key="WideStoryToolsTemplate" TargetType="{x:Type SceReaderControls:SizeTemplateControl}">
    <Grid >
      <aero:SystemDropShadowChrome HorizontalAlignment="Left" VerticalAlignment="Bottom" CornerRadius="4" Color="#71000000" Width="{Binding ElementName=ButtonBar,Path=ActualWidth}">
        <Rectangle Visibility="Visible" Height="33" SnapsToDevicePixels="True" RadiusX="4" RadiusY="4" Fill="{StaticResource AnnotationMenuBackground}"/>
      </aero:SystemDropShadowChrome>
      <StackPanel x:Name="ButtonBar" Orientation="Horizontal" SnapsToDevicePixels="True" HorizontalAlignment="Left" VerticalAlignment="Bottom">
        <Button
          AutomationProperties.AutomationId="SaveToDesktop"
          AutomationProperties.Name="Save to desktop"
          Style="{StaticResource SaveButtonStyle}" Margin="4,0,4,0" Height="30" HorizontalAlignment="Left" VerticalAlignment="Bottom" ToolTip="Save to desktop" />
        <Rectangle Style="{StaticResource MenuSeparatorRectangleStyle}" Margin="0,0,0,1" />
        <Button
          AutomationProperties.AutomationId="Print"
          AutomationProperties.Name="Print"
          Style="{StaticResource PrintButtonStyle}" Margin="4,0,4,0" Height="30" HorizontalAlignment="Left" VerticalAlignment="Bottom" ToolTip="Print (Ctrl-P)" />
        <Rectangle Style="{StaticResource MenuSeparatorRectangleStyle}" Margin="0,0,0,1" />
        <Button
          AutomationProperties.AutomationId="Email"
          AutomationProperties.Name="Email"
          Style="{StaticResource EmailButtonStyle}" Margin="4,0,4,0" Height="30" HorizontalAlignment="Left" VerticalAlignment="Bottom" ToolTip="Send via email" />
        <Rectangle Style="{StaticResource MenuSeparatorRectangleStyle}" Margin="0,0,0,1" />
        <Menu
          Style="{StaticResource AnnotationsMenuStyle}" Margin="4,0,4,0"
          FocusManager.IsFocusScope="True"
          ToolTip="Select text and press this button to make a note">
          <MenuItem
            AutomationProperties.AutomationId="Annotations"
            Padding="0" Height="30" Cursor="Hand" Margin="0,1,0,0">
            <MenuItem.Template>
              <ControlTemplate TargetType="{x:Type MenuItem}">
                <Grid>
                  <ContentPresenter ContentSource="Header"/>
                  <Popup Focusable="false" AllowsTransparency="true" HorizontalOffset="-2" IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" VerticalOffset="-3" x:Name="PART_Popup">
                    <Border Background="White" BorderBrush="Black" BorderThickness="1">
                      <ItemsPresenter />
                    </Border>
                  </Popup>
                </Grid>
              </ControlTemplate>
            </MenuItem.Template>
            <MenuItem.Header>
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition Height="*" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Border Grid.Row="0" Background="{StaticResource NoteDrawingBrush}" Width="20" HorizontalAlignment="Center"/>
                <TextBlock Grid.Row="1" TextAlignment="Left" Width="Auto" Height="Auto" FontFamily="Candara" FontSize="{Binding Source={StaticResource LightSensorProvider}, Path=LuxValue, Converter={StaticResource LightLevelToFontSizeConverter}, ConverterParameter=11pt}" Foreground="#FFFFFFFF" VerticalAlignment="Bottom">NOTES</TextBlock>
              </Grid>
            </MenuItem.Header>
            <MenuItem Header="Create Ink Note" Command="Annotations:AnnotationService.CreateInkStickyNoteCommand" />
            <MenuItem Header="Create Text Note" Command="Annotations:AnnotationService.CreateTextStickyNoteCommand" />
            <MenuItem Header="Create Highlight" Command="Annotations:AnnotationService.CreateHighlightCommand" />
            <MenuItem Header="Delete Annotation" Command="Annotations:AnnotationService.DeleteAnnotationsCommand" />
          </MenuItem>
        </Menu>
      </StackPanel>
    </Grid>
  </ControlTemplate>
  <!--The blank button panel for narrow widths. In effect, this hides the button panel-->
  <ControlTemplate x:Key="NarrowStoryToolsTemplate" TargetType="{x:Type SceReaderControls:SizeTemplateControl}">

  </ControlTemplate>

  <!--Templates for our button panel. As the width gets narrow, we hide the buttons by swapping in a blank template-->
  <SceReaderControls:SizeControlTemplateCollection x:Key="StoryViewerToolsTemplateCollection">
    <SceReaderControls:SizeControlTemplate MaxWidth="345"   Template="{StaticResource NarrowStoryToolsTemplate}" />
    <SceReaderControls:SizeControlTemplate MinWidth="345" Template="{StaticResource WideStoryToolsTemplate}" />
  </SceReaderControls:SizeControlTemplateCollection>



  <!-- Start: Story Viewer Style -->
  <Style TargetType="{x:Type SceReaderControls:StoryViewer}">
    <Setter Property="MinZoom" Value="80" />
    <Setter Property="MaxZoom" Value="160" />
    <Setter Property="ZoomIncrement" Value="10" />
    <Setter Property="Focusable" Value="True" />
    <Setter Property="KeyboardNavigation.TabNavigation" Value="Local" />
    <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="None" />
    <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="None" />
    <Setter Property="KeyboardNavigation.IsTabStop" Value="True" />
    <Setter Property="FlowDocumentPageViewer.FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="StoryTemplateSource" Value="{StaticResource DefaultStoryTemplateSource}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type SceReaderControls:StoryViewer}">
          <DockPanel>

            <!-- Bottom of the Viewer - Navigation UI and zoom slider -->
            <Grid DockPanel.Dock="Bottom" Margin="0,0,10,0" Name="DocumentToolsGrid">


              <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Right" >

                <!-- Story navigation UI -->
                <Button
                  Style="{DynamicResource BlueArrowButtonLeftNoShadow}"
                  Width="33" Height="25.3"
                  Command="{Binding Source={x:Static SceReader:ServiceProvider.ViewManager}, Path=NavigationCommands.PreviousStoryCommand}"
                  AutomationProperties.AutomationId="PreviousStory"
                  AutomationProperties.Name="PreviousStory"/>
                <TextBlock x:Name="StoryNavTextBlock" Text="Article" VerticalAlignment="Center" Margin="5,0,5,0"/>
                <Button
                  Style="{DynamicResource BlueArrowButtonRightNoShadow}"
                  Width="33" Height="25.3"
                  Command="{Binding Source={x:Static SceReader:ServiceProvider.ViewManager}, Path=NavigationCommands.NextStoryCommand}"
                  AutomationProperties.AutomationId="NextStory"
                  AutomationProperties.Name="NextStory"/>

                <!--Divider Panel-->
                <Grid Width="5" />

                <!-- Page navigation UI -->
                <Button
                  Name="PreviousPageButton"
                  Style="{DynamicResource BlueArrowButtonUpNoShadow}"
                  Width="23" Height="35.3"
                  Command="NavigationCommands.PreviousPage"
                  AutomationProperties.AutomationId="PreviousPage"
                  AutomationProperties.Name="PreviousPage"/>
                <StackPanel Orientation="Vertical" HorizontalAlignment="Center" Margin="4,0,10,0">
                  <TextBlock FontFamily="SegoeUI" FontSize="{Binding Source={StaticResource LightSensorProvider}, Path=LuxValue, Converter={StaticResource LightLevelToFontSizeConverter}, ConverterParameter=9pt}" >Page</TextBlock>
                  <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <TextBlock Margin="0" FontFamily="SegoeUI" FontSize="{Binding Source={StaticResource LightSensorProvider}, Path=LuxValue, Converter={StaticResource LightLevelToFontSizeConverter}, ConverterParameter=9pt}" Text="{Binding Path=MasterPageNumber,RelativeSource={RelativeSource TemplatedParent}}" />
                    <TextBlock Margin="0" FontFamily="SegoeUI" FontSize="{Binding Source={StaticResource LightSensorProvider}, Path=LuxValue, Converter={StaticResource LightLevelToFontSizeConverter}, ConverterParameter=9pt}" >/</TextBlock>
                    <TextBlock FontFamily="SegoeUI" FontSize="{Binding Source={StaticResource LightSensorProvider}, Path=LuxValue, Converter={StaticResource LightLevelToFontSizeConverter}, ConverterParameter=9pt}" Margin="0" Text="{Binding Path=PageCount,RelativeSource={RelativeSource TemplatedParent}}" />
                  </StackPanel>
                </StackPanel>
                <!--<TextBlock x:Name="PageNavTextBlock" Text="Page" VerticalAlignment="Center" Margin="5,0,5,0"/>-->
                <Button
                  Name="NextPageButton"
                  Style="{DynamicResource BlueArrowButtonDownNoShadow}"
                  Width="23" Height="35.3"
                  Command="NavigationCommands.NextPage"
                  AutomationProperties.AutomationId="NextPage"
                  AutomationProperties.Name="NextPage"/>
              </StackPanel>

              <!-- Zoom slider -->
              <StackPanel
                Margin="7,0,0,-10" Width="104"
                HorizontalAlignment="Left" VerticalAlignment="Bottom"
                KeyboardNavigation.IsTabStop="False"
                ToolTip="Change font size">
                <SceReaderControls:HeaderedSelector
                  Width="104"
                  TickFrequency="{TemplateBinding ZoomIncrement}"  IsSnapToTickEnabled="true"
                  LargeChange="{TemplateBinding ZoomIncrement}" SmallChange="{TemplateBinding ZoomIncrement}"
                  Minimum="{TemplateBinding MinZoom}" Maximum="{TemplateBinding MaxZoom}"
                  AutomationProperties.AutomationId="Zoom">
                  <SceReaderControls:HeaderedSelector.Value>
                    <Binding Mode="TwoWay" Path="Zoom" RelativeSource="{RelativeSource TemplatedParent}"/>
                  </SceReaderControls:HeaderedSelector.Value>
                  <Button
                    AutomationProperties.AutomationId="XSmall"
                    AutomationProperties.Name="10 pixel Font"
                    Command="SceReaderControls:HeaderedSelector.AdjustToHeaderCommand" Style="{StaticResource HeaderedSelectorButtonStyle}" FontSize="{Binding Source={StaticResource LightSensorProvider}, Path=LuxValue, Converter={StaticResource LightLevelToFontSizeConverter}, ConverterParameter=10pt}">A</Button >
                  <Button
                    AutomationProperties.AutomationId="Small"
                    AutomationProperties.Name="13 pixel Font"
                    Command="SceReaderControls:HeaderedSelector.AdjustToHeaderCommand" Style="{StaticResource HeaderedSelectorButtonStyle}" FontSize="{Binding Source={StaticResource LightSensorProvider}, Path=LuxValue, Converter={StaticResource LightLevelToFontSizeConverter}, ConverterParameter=13pt}">A</Button >
                  <Button
                    AutomationProperties.AutomationId="Normal"
                    AutomationProperties.Name="16 pixel Font"
                    Command="SceReaderControls:HeaderedSelector.AdjustToHeaderCommand" Style="{StaticResource HeaderedSelectorButtonStyle}" FontSize="{Binding Source={StaticResource LightSensorProvider}, Path=LuxValue, Converter={StaticResource LightLevelToFontSizeConverter}, ConverterParameter=16pt}">A</Button >
                  <Button
                    AutomationProperties.AutomationId="Large"
                    AutomationProperties.Name="19 pixel Font"
                    Command="SceReaderControls:HeaderedSelector.AdjustToHeaderCommand" Style="{StaticResource HeaderedSelectorButtonStyle}" FontSize="{Binding Source={StaticResource LightSensorProvider}, Path=LuxValue, Converter={StaticResource LightLevelToFontSizeConverter}, ConverterParameter=19pt}">A</Button >
                  <Button
                    AutomationProperties.Name="24 pixel Font"
                    AutomationProperties.AutomationId="XLarge"
                    Command="SceReaderControls:HeaderedSelector.AdjustToHeaderCommand" Style="{StaticResource HeaderedSelectorButtonStyle}" FontSize="{Binding Source={StaticResource LightSensorProvider}, Path=LuxValue, Converter={StaticResource LightLevelToFontSizeConverter}, ConverterParameter=24pt}">A</Button >
                </SceReaderControls:HeaderedSelector >
              </StackPanel>

              <!--This houses our button panel. As the width gets narrow, we hide the buttons by swapping in a blank template-->
              <SceReaderControls:SizeTemplateControl Margin="120,0,0,5" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Templates="{StaticResource StoryViewerToolsTemplateCollection}"/>
              <!-- Annotation control -->


              <!-- Find tool bar host -->
              <Border Background="White" x:Name="PART_FindToolBarHost" VerticalAlignment="Bottom" HorizontalAlignment="Left" Visibility="Collapsed" Padding="0,15,0,0" />
            </Grid>

            <Grid DockPanel.Dock="Top" Margin="0,0,10,0">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="420"/>
                <ColumnDefinition/>
              </Grid.ColumnDefinitions>
              <Image Name="MsdnMagImage" Source="pack://application:,,,/Resources/Images/msdnmagazine.png"
                     Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="1"
                     Height="50" Width="Auto"
                     HorizontalAlignment="Left"/>
              <Rectangle Name="MsdnMagRect"
                         Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="1"
                         Height="46" Width="Auto"
                         HorizontalAlignment="Stretch"
                         Fill="#FF3366CC"
                         Margin="-2,0,0,0"/>
            </Grid>

            <!-- Document page view for story -->
            <Grid Margin="0" Name="MainDocumentGrid">
              <AdornerDecorator IsEnabled="True" ClipToBounds="True">
                <Grid>
                  <DocumentPageView PageNumber="0" DocumentViewerBase.IsMasterPage="True" KeyboardNavigation.TabIndex="1"
                                    KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.IsTabStop="False" />
                  <Border x:Name="PART_StoryTemplateContentHost" Visibility="Collapsed" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" SceReaderControls:ViewportBox.ViewportElement="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=.}"/>
                  <Border x:Name="PART_StoryTemplateContentEstimator" Visibility="Collapsed" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  />
                </Grid>
              </AdornerDecorator>
            </Grid>
          </DockPanel>
          <ControlTemplate.Triggers>
            <Trigger Property="CanGoToNextPage"  Value="False">
              <Setter Property="IsEnabled" Value="False" TargetName="NextPageButton"/>
              <Setter Property="Visibility" Value="Hidden" TargetName="NextPageButton"/>
            </Trigger>
            <Trigger Property="CanGoToPreviousPage"  Value="False">
              <Setter Property="IsEnabled" Value="False" TargetName="PreviousPageButton"/>
              <Setter Property="Visibility" Value="Hidden" TargetName="PreviousPageButton"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="CanGoToNextPage"  Value="False" />
                <Condition Property="CanGoToPreviousPage"  Value="False" />
              </MultiTrigger.Conditions>
              <!--<Setter Property="Visibility" Value="Collapsed" TargetName="PageNavTextBlock" />-->
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!-- End: Story Viewer Style -->

</ResourceDictionary>